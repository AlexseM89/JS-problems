/**
 * Со словами-анаграммами мы познакомились в прошлой задаче.
 *
 * Напишите функцию searchAnagrams(value) возвращающую слова-анаграммы из предложения,
 * сохраняя их порядок и регистр букв
 *
 * Пример:
 *
 * searchAnagrams('Вижу апельсин значит живу. Спаниель') === 'Вижу апельсин живу Спаниель'
 *
 * @param {string} value
 * @returns {string}
 */
function searchAnagrams(value) {
   


// 
// let value = 'Вижу апельсин значит живу. Спаниель';
//стартовую строку value очищаем от точек и разбиываем по пробелам на массив строк
var b = value.replace(/\./g,'').split(' '); 
// console.log(b);
let resulMas = []
for (let i = 0; i < b.length; i++) {
    let firstWord = b[i].toLowerCase().split("").sort().join("");
    // if (b[i].toLowerCase().split("").sort().join("") == firstWord) 
    resulMas.push(firstWord);
}
// console.log(resulMas)

// let filterWords = resulMas.filter((v,i,a)=>a.indexOf(v)==i); 
// console.log(filterWords)


var map = resulMas.reduce((a,val)=>{
    a[val] = (a[val]? a[val]+1 :1) ;
    return a;
  },{});
  var result;
  Object.keys(map).forEach((key)=>{
    if(map[key] === 1)
      result = key;
  });
//   console.log(result)
  let slovoRes = result.toString()
//   console.log(slovoRes)

  let index = resulMas.indexOf(slovoRes)
//   console.log(index)

  delete(b[index])
//   console.log(b)

  let itogAnagram = b.join(" ")
  // console.log(itogAnagram)
  return itogAnagram

}
// searchAnagrams('Вижу апельсин значит живу. Спаниель')
module.exports = searchAnagrams;
// for (let i = 0; i < resulMas.length-1; i++){
//     for (let k = resulMas.length-1; k !== 0; k--){
          
//             if (resulMas[i] === resulMas[k]){
//             console.log(resulMas[i])
//             booleanMassiv[i]=true
//                 } else {
//             booleanMassiv[i]=false
//             }
        
//     }
// }
//  console.log(resulMas)


// 1. Очистить данную строку от символов точка
// 1а. 'Вижу апельсин значит живу. Спаниель' ->'Вижу апельсин значит живу Спаниель'
// 2. Разложить Строку на массив подстрок
// 2a. 'Вижу апельсин значит живу Спаниель' -> [ 'Вижу', 'апельсин', 'значит', 'живу', 'Спаниель' ]
// 3. изменить каждый элемент массива строк согласно алфавиту
// 3a. [ 'Вижу', 'апельсин', 'значит', 'живу', 'Спаниель' ] -> [ 'вжиу', 'аеилнпсь', 'азинтч', 'вжиу', 'аеилнпсь' ]
// 4. Если у элемента есть дубль ставить на его место true если нет false 
// 4a. [ 'вжиу', 'аеилнпсь', 'азинтч', 'вжиу', 'аеилнпсь' ] -> [ true, true, false, true, true ]
// 5. Есть 2 массива b и Boolean Оставить в b только те что в масииве boolean имеют true 
// 5a.  [ 'Вижу', 'апельсин', 'значит', 'живу', 'Спаниель' ] -> [ 'Вижу', 'апельсин', 'живу', 'Спаниель' ]
// 6. Конвертнуть массив в строку и вывести её 
// 6a. [ 'Вижу', 'апельсин', 'живу', 'Спаниель' ] -> 'Вижу апельсин живу Спаниель'

// 5  boolean = [ true, true, false, true, true ]
//  Берём массив b = [ 'Вижу', 'апельсин', 'значит', 'живу', 'Спаниель' ] начинаем с 0 элемента 
//  let x = b[0]
//  if (boolean[0] === true) {

//  }
//  else{
//      b[0]=""}

// b[1] if (boolean[1] === true) {}else{b[1]==""}
// b[2] if (boolean[2] === true) {}else{b[2]==""}
// b[3] if (boolean[3] === true) {}else{b[3]==""}

// 4. Создаем пустой массив для сохранения результатов сравнения []
// Есть массив
// берем первый элемент сравниваем его с остальными(2,3,4,5) элементами массива
// если есть полное совпадение под тем же самым индексом элемента в результируещем массиве ставим true
// иначе false
// [ 'вжиу', 'аеилнпсь', 'азинтч', 'вжиу', 'аеилнпсь' ]->[ true ]
// берем второй элемент сравниваем его с остальными элементами(1,3,4,5) массива
// если есть полное совпадение под тем же самым индексом элемента в результируещем массиве ставим true
// иначе false
// ['вжиу', 'аеилнпсь', 'азинтч', 'вжиу', 'аеилнпсь' ]->[ true, true ]
// берем третий элемент сравниваем его с остальными(2,1,4,5) элементами массива
// если есть полное совпадение под тем же самым индексом элемента в результируещем массиве ставим true
// иначе false
// ['вжиу', 'аеилнпсь', 'азинтч', 'вжиу', 'аеилнпсь' ]->[ true, true, false ]
// берем четвертый элемент сравниваем его с остальными(2,3,1,5) элементами массива
// если есть полное совпадение под тем же самым индексом элемента в результируещем массиве ставим true
// иначе false
// ['вжиу', 'аеилнпсь', 'азинтч', 'вжиу', 'аеилнпсь' ]->[ true, true, false, true ]
// берем пятый элемент сравниваем его с остальными элементами(2,3,4,1) массива
// если есть полное совпадение под тем же самым индексом элемента в результируещем массиве ставим true
// иначе false
// ['вжиу', 'аеилнпсь', 'азинтч', 'вжиу', 'аеилнпсь' ]->[ true, true, false, true, true ]
// Записываем итоговый массив в переменную

